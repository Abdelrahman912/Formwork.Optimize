<UserControl x:Class="FormworkOptimize.App.UI.Views.GeneticOptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FormworkOptimize.App.UI.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:enums="clr-namespace:FormworkOptimize.Core.Enums;assembly=FormworkOptimize.Core"
             xmlns:markup="clr-namespace:FormworkOptimize.App.UI.MarkupExtensions"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
             xmlns:proxy ="clr-namespace:FormworkOptimize.App.UI.Helpers"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/FormworkOptimize.App;component/UI/Resources/MainResourceDictionary.xaml"/>
    </UserControl.Resources>
    <Grid>
        <GroupBox Header="Genetic" Style="{StaticResource MaterialDesignCardGroupBox}" 
                                          materialDesign:ColorZoneAssist.Mode="Standard"
                                           materialDesign:ShadowAssist.ShadowEdges="All">
            <Grid>
                <Grid.RowDefinitions >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Optimize" VerticalAlignment="Center" Margin="0 5"/>
                        <ComboBox ItemsSource="{Binding Source={markup:EnumBindingSource {x:Type enums:OptimizeOption}}}" 
                              Grid.Column="1" Margin="0 5" SelectedItem="{Binding SelectedOptimizeOption}"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Formwork System" VerticalAlignment="Center" Margin="0 5"/>
                        <ComboBox ItemsSource="{Binding Systems}" SelectedItem="{Binding SelectedSystem}" Grid.Column="1" Margin="0 5"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Number of Generations" VerticalAlignment="Center" Margin="0 5"/>
                        <TextBox  Text="{Binding NoGenerations, UpdateSourceTrigger=PropertyChanged}" 
                                  materialDesign:HintAssist.Hint="Number of Generations More than 10."
                                  Grid.Column="1" Margin="0 5"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Number of Populations" 
                                   materialDesign:HintAssist.Hint="Number of Populations More than 10."
                                   VerticalAlignment="Center" Margin="0 5"/>
                        <TextBox Text="{Binding NoPopulation, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="0 5"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Crossover Probability" 
                                   materialDesign:HintAssist.Hint="Crossover Probability (0.6 : 1)"
                                   VerticalAlignment="Center" Margin="0 5"/>
                        <TextBox Text="{Binding CrossOverProbability, UpdateSourceTrigger=PropertyChanged}" 
                                 Grid.Column="1" Margin="0 5" ToolTip="Crossover Probability (0.6 : 1)"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Mutation Probability" 
                                   materialDesign:HintAssist.Hint="Mutation Probability (0 : 0.1)"
                                   VerticalAlignment="Center" Margin="0 5"/>
                        <TextBox Text="{Binding MutationProbability, UpdateSourceTrigger=PropertyChanged}" 
                                 Grid.Column="1" Margin="0 5" ToolTip="Mutation Probability (0 : 0.1)"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Offset From Boundary Lines (cm)" VerticalAlignment="Center" Margin="0 5"/>
                        <TextBox Text="{Binding BoundaryLinesOffset, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="0 5"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Offset From Beams (cm)" VerticalAlignment="Center" Margin="0 5"/>
                        <TextBox Text="{Binding BeamsOffset, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="0 5"/>
                    </Grid>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button  Margin="5" Command="{Binding GeneticCommand}">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Dna"  VerticalAlignment="Center" Width="20" Height="20" Margin="5 0" />
                                <TextBlock Text="Run Genetic" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Grid Grid.Row="1" Visibility="{Binding IsGeneticResultsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBlock Text="Genetic Results" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">

                                <Button Width="25" Height="25" VerticalAlignment="Bottom" ToolTip="Graph Genetic History"
                            Command="{Binding GraphCommand}" Background="Maroon" BorderBrush="Maroon"
                        HorizontalAlignment="Right" Margin="5 0"
              Style="{DynamicResource MaterialDesignFloatingActionAccentButton}">
                                    <materialDesign:PackIcon Kind="Graph"  VerticalAlignment="Center" Width="15" Height="15" />
                                </Button>

                                <Button Width="25" Height="25" VerticalAlignment="Bottom" Visibility="{Binding IsCostVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding ExportCommand}" ToolTip="Export Results to Excel"
                        HorizontalAlignment="Right" Margin="5 0"
              Style="{DynamicResource MaterialDesignFloatingActionAccentButton}">
                                    <materialDesign:PackIcon Kind="FileExport"  VerticalAlignment="Center" Width="15" Height="15" />
                                </Button>

                                <Button Width="23" Height="23" Grid.Row="1"  Grid.Column="1" Visibility="{Binding IsCostVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding DrawCommand}" ToolTip="Model Result in Revit"
                         Margin="5 0 5 0"
              Style="{DynamicResource MaterialDesignFloatingActionButton}">
                                    <materialDesign:PackIcon Kind="Draw"  
                                                             VerticalAlignment="Center" Width="15" Height="15" />
                                </Button>

                                <Button Width="23" Height="23" Grid.Row="1"  ToolTip="Show Genetic Result"
                                        Grid.Column="1"
                            Command="{Binding ShowDetailResultCommand}" 
                         Margin="5 0 5 0"
              Style="{DynamicResource MaterialDesignFloatingActionAccentButton}">
                                    <materialDesign:PackIcon Kind="Show"  VerticalAlignment="Center" Width="15" Height="15" />
                                </Button>
                            </StackPanel>
                        </Grid>
                        <DataGrid ItemsSource="{Binding GeneticResults}" 
                              HeadersVisibility="All"  Grid.Row="1" 
                              CanUserAddRows="False" CanUserDeleteRows="False" 
                              SelectedItem="{Binding SelectedGeneticResult, UpdateSourceTrigger=PropertyChanged}" 
                              SelectionMode="Single" AutoGenerateColumns="False"
                              ScrollViewer.VerticalScrollBarVisibility="Auto"
                              MinHeight="100">
                            <DataGrid.Resources>
                                <proxy:DataContextSpy x:Key="proxy" DataContext="{Binding}"/>
                            </DataGrid.Resources>
                            <DataGrid.Columns>

                                <DataGridTextColumn Header="Rank"  
                                    Binding="{Binding Rank}" Width="*" MinWidth="70" MaxWidth="70" IsReadOnly="true"/>
                                <DataGridTextColumn Header="Name"  
                                    Binding="{Binding Name}" Width="2.5*" MinWidth="100" IsReadOnly="true"/>
                                <DataGridTextColumn Header="Fitness"  
                                    Binding="{Binding Fitness}" Width="2*" MinWidth="100" IsReadOnly="true"/>
                                <DataGridTextColumn Header="Cost"  Visibility="{Binding DataContext.IsCostVisible,Source={StaticResource proxy}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Binding="{Binding Cost, StringFormat='{}{0:0,0.00} LE'}" Width="2.5*" MinWidth="100" IsReadOnly="true"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                </Grid>
                <Image Grid.Row="2" Width="100" Height="50" VerticalAlignment="Center" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                       gif:ImageBehavior.RepeatBehavior="Forever"  gif:ImageBehavior.AnimatedSource="../Resources/loading.gif" />
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
